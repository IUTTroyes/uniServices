security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        chain_provider:
            chain:
                providers: [ personnel_user, etudiant_user ]
        personnel_user:
            entity: { class: App\Entity\Personnel, property: username }
        etudiant_user:
            entity: { class: App\Entity\Etudiant, property: username }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|logo|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                provider: chain_provider

        api:
            pattern: ^/api
            stateless: true
            jwt: ~
            provider: chain_provider

        main:
            lazy: true
            provider: chain_provider
            custom_authenticator:
                - App\Security\LoginFormAuthenticator
#                - App\Security\LoginCasAuthenticator
            entry_point: App\Security\LoginFormAuthenticator
            pattern: ^/
                #      remember_me:
                #        secret: '%kernel.secret%'
            logout:
                path: security_logout
                target: security_login

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                # by default, the feature is enabled by checking a checkbox in the
                # login form, uncomment the following line to always enable it.
                #always_remember_me: true
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
#        - { path: ^/api,       roles: PUBLIC_ACCESS }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
